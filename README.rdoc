= catpaws

CApistrano Tasks Providing AWS

I'm using Capistrano to manage remote machines when running data analysis workflows. 
This isn't quite what Capistrano was designed for, so it's all a bit hacky.


== EC2

Built on top of the right_aws gem.

Currently provides EC2:start and EC2:stop tasks and little else

Lets you start multiple instances and maps EC2 security groups to 
Capistrano roles.

Plan to add tasks for packaging up servers to amis  etc



== Example Capfile

 require 'catpaws'

 set :aws_access_key,  ENV['AMAZON_ACCESS_KEY']
 set :aws_secret_access_key , ENV['AMAZON_SECRET_ACCESS_KEY']
 set :ec2_url, ENV['EC2_URL']
 set :ssh_options, { 
                    :keys => [ENV['EC2_KEYFILE']],
                    :user => "ubuntu" }
 set :sudo_password, ''
 set :nhosts, 3 
 set :working_dir, '/mnt/testing'

 set :key, ENV['EC2_KEY']
 set :key_file, ENV['EC2_KEYFILE']
 set :ami, 'ami-cf4d67bb' 
 set :instance_type, 'm1.small'
 set :group_name, 'testing'

 desc "setup apt on all instances"
 task :apt_setup, :roles => group_name do
   sudo "apt-get update"
   sudo "apt-get install -y build_essential"  
 end 
 before 'apt_setup', 'EC2:start' 

== Installation

You will need an AWS EC2 account - see http://aws.amazon.com/ec2/ (or compatible cloud infrastructure,  it should work on Eucalyptus)
  
Make sure you have create an ssh key in order to access your instances

To use EC2:start and stop in your Capfiles, you will need to have the following installed:

git:        http://git-scm.com/

ruby:       http://ruby-lang.org/

RubyGems:   http://rubygems.org/
 
Install the gems you need with:

 sudo gem install capistrano
 sudo gem install amazon-ec2
 sudo gem install json

Get the catpaws gem from github and build it

 git clone git@github.com:cassj/catpaws.git
 cd catpaws
 rake gemspec
 rake build
 sudo gem install pkg/catpaws-*.gem
 

Finally, set the following environment variables appropriately
for your AWS account:

 AMAZON_ACCESS_KEY
 AMAZON_SECRET_ACCESS_KEY
 EC2_URL ( defaults to eu-west-1.ec2.amazonaws.com)
 EC2_KEY ( the name of the key registered with EC2, with which you will access your instances )
 EC2_KEYFILE ( the location of the key file. Alternatively, you can use ssh-agent )
 


== Copyright

Copyright (c) 2010 cassj. See LICENSE for details.
